// Variables
// Pallete
$primary: #631D76;
$secondary: #C189A4;
$light: rgb(251, 251, 251);
$mid-dark: rgb(46, 37, 50);
$dark: rgb(30, 24, 32);
$shadow: rgba(0,0,0,.4);

// Glow
$glow: 0px 0px 8px 1px;

// Shadows
$main-box-shadow: 10px 8px 10px -5px;
$main-text-shadow: 10px 8px 3px;
$carousel-shadow: 0px 15px 20px -5px;

// Functions
/**
 * Computes a top-shadow for a card effect.
 *
 * @param {Number} $depth - depth level
 *
 * @return {List}
 */
 @function top-shadow($depth) {
    $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
    $blur: nth(1.5 3 10 14 19, $depth) * 4px;
    $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));
  
    @return 0 $primary-offset $blur $color;
  }
  
  /**
   * Computes a bottom-shadow for a card effect.
   *
   * @param {Number} $depth - depth level
   *
   * @return {List}
   */
  @function bottom-shadow($depth) {
    $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
    $blur: nth(1 3 3 5 6, $depth) * 4px;
    $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));
  
    @return 0 $primary-offset $blur $color;
  }
  

//   Mixins
  /**
   * Gives a card depth effect.
   *
   * @param {Number} $depth - depth level (between 1 and 5)
   *
   * @link https://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
   *
   * @requires {function} top-shadow
   * @requires {function} bottom-shadow
   */
  @mixin card($depth) {
    @if $depth < 1 {
      box-shadow: none;
    } @else if $depth > 5 {
      @warn "Invalid $depth `#{$depth}` for mixin `card`.";
    } @else {
      box-shadow: bottom-shadow($depth), top-shadow($depth);  
    }
  }
  
  